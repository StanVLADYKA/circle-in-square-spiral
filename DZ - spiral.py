"""спираль в прямоугольнике с введенными сторонами"""

a=int(input("введите ширину стороны прямоугольника: "))
b=int(input("введите высоту стороны прямоугольника: "))

xx=[] # список с подсписками чисел прямоугольников
xc=[0] #счетчик для заполнеия значений прямоугольников
xxx=[] # итоговая матрица
xn=1  # счетчик для заполнения сторон
last=1 # переменная для выведения последний значений в каждом прямоугольнике
nn=0

if a>=b:  # определяем количество прямоугольников вложенных в спираль, малая сторона /2 с окр вверх
    lsq=b/2
else:
    lsq=a/2
lsq=int(lsq+0.5)  #чтобы округлить число вверх до целого добавляем 0.5

    # формируем общий список, где числа каждого прямоугольника будет как вложенным список

for n in range(lsq):
    if n<lsq-1:
        for c in range(last,last+((a-n*2)*2+(b-2-n*2)*2)+1*nn):  # пробегаемся по значениям в каждом прямоугодьнике + подсписок
            xc.append(c)
        last=xc[-1]
        xc.pop(0)
        xy=xc.copy()
        xx.append(xy)
        xc.clear()
        nn=1
    if n==lsq-1: # промоугольник (список)
        for d in range(last+1,a*b+1):
            xc.append(d)
        xx.append(xc)


# есть список xx c числами каждого прямоугольника. теперь заполняем матрицу, позиция = значение

for k in range(b):  #создаем пустую матрицу
    xxx.append([0]*a)

# далее сопоставлениями заполняем матрицу значениями по индексам

for f in range(0,lsq): # по количеству прямоугольников (f - номер прямоугольника)
        for v in range(1,5):   # проходимся по сторонам прямоугольника
            if  v==1: # #заполняем верхние стороны прямоугольника
                for n in range(0,a-f*2):
                    try:
                        xxx[f][xn+f-1]=xx[f][xn-1]
                        xn += 1
                    except IndexError: # убираем ошибки диапазона
                        print()
            if v==2: #заполняем правые стороны прямоугольников
                for n in range(1,b-f*2-1):
                    try:
                        xxx[xn+f][a-f-1]=xx[f][a+xn-1-f*2]
                    except IndexError:
                        print()
                    xn += 1
            if v==3: #заполняем нижние стороны прямоугольников
                for n in range(0,a-f*2):
                    try:
                        xxx[b-f-1][a-f-xn]=xx[f][a+b+xn-3-f*2-f*2]
                    except IndexError:
                        print()
                    xn += 1
            if v==4: #заполняем левые стороны прямоугольников,
                if  a%2!=0 and f==lsq-1: # кроме последнего, чтобы не переписать значения одиночного столбца, кот. заполнили правой строной
                    break
                else:
                    for n in range(1,b-f*2-1):
                        try:
                            xxx[xn+f][f]=xx[f][len(xx[f])-xn] # xxx[b-xn-f-1][f]=xx[f][a*2+b+xn-3-f*(b+1)] >>  xxx[xn-f*(b-1)][f]=xx[f][len(xx[f])-xn]
                        except IndexError:
                            print()
                        xn += 1
            xn=1


#  отображаем матрицу в виде заполненного прямоугольника
for z in range(len(xxx)):         # len(xxx) - возвращает количество строк в матрице xxx
    for x in range(len(xxx[z])):  # len(xxx[z]) - возвращает количество элементов в строке z
        print(xxx[z][x], end = '      ')
    print()                     # делаем переход на новую строку


